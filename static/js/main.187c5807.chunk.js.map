{"version":3,"sources":["IncreaseButton.js","DecreaseButton.js","BathTub.js","App.js","reportWebVitals.js","index.js"],"names":["IncreaseButton","divVal","setDivVal","Button","variant","onClick","alert","DecreaseButton","BathTub","styleTub","height","border","borderRadius","textAlign","backgroundColor","position","bottom","width","transition","style","App","useState","Container","Row","Col","md","paddingTop","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAkBeA,EAhBQ,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,UAS7B,OACI,mCACI,eAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAVZ,WACfJ,GAAQ,IACPK,MAAM,8BAGNJ,EADYD,EAAS,KAMrB,2BAAiEA,EAAO,SCIrEM,EAfQ,SAAC,GAAwB,IAAvBN,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,UAU7B,OACI,eAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAVP,WACfJ,EAAO,EAENC,EADYD,EAAS,IAGrBK,MAAM,6BAKV,2BAAgEL,EAAO,OCShEO,EAtBC,SAAC,GAAa,IAAZP,EAAW,EAAXA,OAERQ,EAAW,CACbC,OAAO,GAAD,OAAIT,EAAJ,MACNU,OAAO,kBACPC,aAAa,OACbC,UAAU,SACVC,gBAAgB,OAChBC,SAAU,WACVC,OAAO,MACPC,MAAM,MACNC,WAAY,2BAEhB,OACI,8BACI,qBAAKC,MAAOV,EAAZ,wBCMGW,MAdf,WAEE,MAA4BC,mBAAS,GAArC,mBAAOpB,EAAP,KAAeC,EAAf,KACA,OACE,cAACoB,EAAA,EAAD,CAAWH,MAAO,GAAlB,SACI,eAACI,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGN,MAAO,CAACN,UAAU,QAASa,WAAW,OAAlD,SAA0D,cAAC,EAAD,CAAgBzB,OAAQA,EAAQC,UAAWA,MACrG,cAACsB,EAAA,EAAD,CAAKC,GAAI,EAAGN,MAAO,CAACQ,UAAU,OAA9B,SAAsC,cAAC,EAAD,CAAS1B,OAAQA,MACvD,cAACuB,EAAA,EAAD,CAAKC,GAAI,EAAGN,MAAO,CAACO,WAAW,OAA/B,SAAuC,cAAC,EAAD,CAAgBzB,OAAQA,EAAQC,UAAWA,YCH3E0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.187c5807.chunk.js","sourcesContent":["import { Button } from \"react-bootstrap\";\n\nconst IncreaseButton = ({divVal, setDivVal}) =>{\n    const increaseWater = () => {\n        if(divVal>=100){\n            alert(\"You have reached all level\");\n        }else{\n            const val = divVal + 20;\n            setDivVal(val);\n        }\n    }\n    return(\n        <>\n            <Button variant=\"primary\" onClick={increaseWater}>IncreaseWater {divVal/20}</Button>\n        </>\n    )\n}\n\nexport default IncreaseButton;","import { Button } from \"react-bootstrap\";\n\nconst DecreaseButton = ({divVal, setDivVal}) =>{\n    const decreaseWater = () => {\n        if(divVal>0){\n            const val = divVal - 20;\n            setDivVal(val);\n        }else{\n            alert(\"You can't decrease more!\")\n        }\n    }\n\n    return(\n        <Button variant=\"danger\" onClick={decreaseWater}>DecreaseWater {divVal/20}</Button>\n    )\n}\n\nexport default DecreaseButton;","const BathTub = ({divVal}) =>{\n\n    const styleTub = {\n        height:`${divVal}px`,\n        border:\"2px solid black\",\n        borderRadius:\"10px\",\n        textAlign:\"center\",\n        backgroundColor:\"blue\",\n        position: \"absolute\",\n        bottom:\"65%\",\n        width:\"34%\",\n        transition: \"height 0.2s ease-in-out\",\n    };\n    return(\n        <div>\n            <div style={styleTub}>\n                bathTub\n            </div>\n        </div>\n    )\n}\n\nexport default BathTub;","import './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useState } from 'react';\nimport IncreaseButton from './IncreaseButton';\nimport DecreaseButton from './DecreaseButton';\nimport BathTub from './BathTub';\n\nfunction App() {\n\n  const [divVal, setDivVal] = useState(0);\n  return (\n    <Container style={{}}>\n        <Row>\n        <Col md={3} style={{textAlign:\"right\", paddingTop:\"25%\"}}><IncreaseButton divVal={divVal} setDivVal={setDivVal} /></Col>\n        <Col md={6} style={{marginTop:\"25%\"}}><BathTub divVal={divVal} /></Col>\n        <Col md={3} style={{paddingTop:\"25%\"}}><DecreaseButton divVal={divVal} setDivVal={setDivVal}/></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}